{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_bold = _resolveComponent(\"bold\");\n  return _openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cars, car => {\n    return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"p\", null, [_createVNode(_component_bold, null, {\n      default: _withCtx(() => [_createTextVNode(\"Márka:\")]),\n      _: 1 /* STABLE */\n    }), _createTextVNode(\" \" + _toDisplayString(car.brand), 1 /* TEXT */)])]);\n  }), 256 /* UNKEYED_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_renderList","$data","cars","car","_createElementVNode","_createVNode","_component_bold","default","_withCtx","_createTextVNode","_","_toDisplayString","brand"],"sources":["C:\\Users\\PC\\Desktop\\szevasz\\frontend\\src\\components\\Header.vue"],"sourcesContent":["<template>\n  <div v-for=\"car in cars\">\n    <p><bold>Márka:</bold> {{ car.brand }}</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      cars: [],\n    };\n  },\n  created() {\n    this.getCars();\n  },\n  methods: {\n    async getCars() {\n      try {\n        const response = await axios.get(\"http://localhost:5000/cars\");\n        this.cars = response.data;\n      } catch (err) {\n        console.log(err);\n      }\n    },\n  },\n};\n</script>\n"],"mappings":";;;2BACEA,mBAAA,CAEMC,SAAA,QAHRC,WAAA,CACqBC,KAAA,CAAAC,IAAI,EAAXC,GAAG;yBAAfL,mBAAA,CAEM,cADJM,mBAAA,CAA0C,YAAvCC,YAAA,CAAmBC,eAAA;MAF1BC,OAAA,EAAAC,QAAA,CAEa,MAAM,CAFnBC,gBAAA,CAEa,QAAM,E;MAFnBC,CAAA;QAAAD,gBAAA,CAE0B,GAAC,GAAAE,gBAAA,CAAGR,GAAG,CAACS,KAAK,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}